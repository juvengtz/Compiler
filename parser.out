Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BRACKET_L
    BRACKET_R
    CTE_STRING
    FUNC
    MAIN
    NOTEQUAL
    PRINT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM PARENTESIS_L PARENTESIS_R bloque
Rule 2     bloque -> CURLY_L var1 estatuto1 CURLY_R
Rule 3     var1 -> var2
Rule 4     var1 -> empty
Rule 5     var2 -> VAR var3
Rule 6     var2 -> var2 var2
Rule 7     var3 -> var4 COLON tipo SEMICOLON
Rule 8     var4 -> ID
Rule 9     var4 -> var4 COMA var4
Rule 10    tipo -> INT
Rule 11    tipo -> FLOAT
Rule 12    tipo -> STRING
Rule 13    estatuto1 -> estatuto2 SEMICOLON
Rule 14    estatuto1 -> estatuto1 estatuto1
Rule 15    estatuto2 -> asignacion
Rule 16    estatuto2 -> condicion
Rule 17    estatuto2 -> llamado
Rule 18    estatuto2 -> whileLoop
Rule 19    estatuto2 -> forLoop
Rule 20    asignacion -> ID ASSIGN expresion
Rule 21    llamado -> ID PARENTESIS_L llamado_1 PARENTESIS_R
Rule 22    llamado_1 -> llamado_2
Rule 23    llamado_1 -> llamado_2 COMA llamado_2
Rule 24    llamado_2 -> STRING
Rule 25    llamado_2 -> expresion
Rule 26    expresion -> exp
Rule 27    expresion -> exp MORE exp
Rule 28    expresion -> exp LESS exp
Rule 29    expresion -> exp EQUAL exp
Rule 30    expresion -> exp NOT_EQUAL exp
Rule 31    whileLoop -> WHILE PARENTESIS_L expresion PARENTESIS_R bloque
Rule 32    forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque
Rule 33    condicion -> IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2
Rule 34    condicion2 -> ELSE bloque
Rule 35    condicion2 -> empty
Rule 36    argumento -> argumento2
Rule 37    argumento -> empty
Rule 38    argumento2 -> ID COLON tipo
Rule 39    argumento2 -> argumento2 COMA argumento2
Rule 40    exp -> termino
Rule 41    exp -> termino signo
Rule 42    signo -> PLUS
Rule 43    signo -> MINUS
Rule 44    termino -> factor
Rule 45    termino -> factor operacion
Rule 46    operacion -> MULT exp
Rule 47    operacion -> DIV exp
Rule 48    factor -> PARENTESIS_L expresion PARENTESIS_R
Rule 49    factor -> var_cte
Rule 50    var_cte -> ID
Rule 51    var_cte -> CTE_INT
Rule 52    var_cte -> CTE_FLOAT
Rule 53    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 20
BRACKET_L            : 
BRACKET_R            : 
COLON                : 7 38
COMA                 : 9 23 39
CTE_FLOAT            : 52
CTE_INT              : 51
CTE_STRING           : 
CURLY_L              : 2
CURLY_R              : 2
DIV                  : 47
ELSE                 : 34
EQUAL                : 29
FLOAT                : 11
FOR                  : 32
FUNC                 : 
ID                   : 8 20 21 38 50
IF                   : 33
INT                  : 10
LESS                 : 28
MAIN                 : 
MINUS                : 43
MORE                 : 27
MULT                 : 46
NOTEQUAL             : 
NOT_EQUAL            : 30
PARENTESIS_L         : 1 21 31 32 33 48
PARENTESIS_R         : 1 21 31 32 33 48
PLUS                 : 42
PRINT                : 
PROGRAM              : 1
SEMICOLON            : 7 13 32
STRING               : 12 24
VAR                  : 5
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

argumento            : 32
argumento2           : 36 39 39
asignacion           : 15
bloque               : 1 31 32 33 34
condicion            : 16
condicion2           : 33
empty                : 4 35 37
estatuto1            : 2 14 14
estatuto2            : 13
exp                  : 26 27 27 28 28 29 29 30 30 46 47
expresion            : 20 25 31 32 32 33 48
factor               : 44 45
forLoop              : 19
llamado              : 17
llamado_1            : 21
llamado_2            : 22 23 23
operacion            : 45
programa             : 0
signo                : 41
termino              : 40 41
tipo                 : 7 38
var1                 : 2
var2                 : 3 6 6
var3                 : 5
var4                 : 7 9 9
var_cte              : 49
whileLoop            : 18

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM PARENTESIS_L PARENTESIS_R bloque

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . PARENTESIS_L PARENTESIS_R bloque

    PARENTESIS_L    shift and go to state 3


state 3

    (1) programa -> PROGRAM PARENTESIS_L . PARENTESIS_R bloque

    PARENTESIS_R    shift and go to state 4


state 4

    (1) programa -> PROGRAM PARENTESIS_L PARENTESIS_R . bloque
    (2) bloque -> . CURLY_L var1 estatuto1 CURLY_R

    CURLY_L         shift and go to state 6

    bloque                         shift and go to state 5

state 5

    (1) programa -> PROGRAM PARENTESIS_L PARENTESIS_R bloque .

    $end            reduce using rule 1 (programa -> PROGRAM PARENTESIS_L PARENTESIS_R bloque .)


state 6

    (2) bloque -> CURLY_L . var1 estatuto1 CURLY_R
    (3) var1 -> . var2
    (4) var1 -> . empty
    (5) var2 -> . VAR var3
    (6) var2 -> . var2 var2
    (53) empty -> .

    VAR             shift and go to state 10
    ID              reduce using rule 53 (empty -> .)
    IF              reduce using rule 53 (empty -> .)
    WHILE           reduce using rule 53 (empty -> .)
    FOR             reduce using rule 53 (empty -> .)

    var1                           shift and go to state 7
    var2                           shift and go to state 8
    empty                          shift and go to state 9

state 7

    (2) bloque -> CURLY_L var1 . estatuto1 CURLY_R
    (13) estatuto1 -> . estatuto2 SEMICOLON
    (14) estatuto1 -> . estatuto1 estatuto1
    (15) estatuto2 -> . asignacion
    (16) estatuto2 -> . condicion
    (17) estatuto2 -> . llamado
    (18) estatuto2 -> . whileLoop
    (19) estatuto2 -> . forLoop
    (20) asignacion -> . ID ASSIGN expresion
    (33) condicion -> . IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2
    (21) llamado -> . ID PARENTESIS_L llamado_1 PARENTESIS_R
    (31) whileLoop -> . WHILE PARENTESIS_L expresion PARENTESIS_R bloque
    (32) forLoop -> . FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque

    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    FOR             shift and go to state 21

    estatuto1                      shift and go to state 11
    estatuto2                      shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    llamado                        shift and go to state 15
    whileLoop                      shift and go to state 16
    forLoop                        shift and go to state 17

state 8

    (3) var1 -> var2 .
    (6) var2 -> var2 . var2
    (5) var2 -> . VAR var3
    (6) var2 -> . var2 var2

    ID              reduce using rule 3 (var1 -> var2 .)
    IF              reduce using rule 3 (var1 -> var2 .)
    WHILE           reduce using rule 3 (var1 -> var2 .)
    FOR             reduce using rule 3 (var1 -> var2 .)
    VAR             shift and go to state 10

    var2                           shift and go to state 22

state 9

    (4) var1 -> empty .

    ID              reduce using rule 4 (var1 -> empty .)
    IF              reduce using rule 4 (var1 -> empty .)
    WHILE           reduce using rule 4 (var1 -> empty .)
    FOR             reduce using rule 4 (var1 -> empty .)


state 10

    (5) var2 -> VAR . var3
    (7) var3 -> . var4 COLON tipo SEMICOLON
    (8) var4 -> . ID
    (9) var4 -> . var4 COMA var4

    ID              shift and go to state 25

    var3                           shift and go to state 23
    var4                           shift and go to state 24

state 11

    (2) bloque -> CURLY_L var1 estatuto1 . CURLY_R
    (14) estatuto1 -> estatuto1 . estatuto1
    (13) estatuto1 -> . estatuto2 SEMICOLON
    (14) estatuto1 -> . estatuto1 estatuto1
    (15) estatuto2 -> . asignacion
    (16) estatuto2 -> . condicion
    (17) estatuto2 -> . llamado
    (18) estatuto2 -> . whileLoop
    (19) estatuto2 -> . forLoop
    (20) asignacion -> . ID ASSIGN expresion
    (33) condicion -> . IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2
    (21) llamado -> . ID PARENTESIS_L llamado_1 PARENTESIS_R
    (31) whileLoop -> . WHILE PARENTESIS_L expresion PARENTESIS_R bloque
    (32) forLoop -> . FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque

    CURLY_R         shift and go to state 27
    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    FOR             shift and go to state 21

    estatuto1                      shift and go to state 26
    estatuto2                      shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    llamado                        shift and go to state 15
    whileLoop                      shift and go to state 16
    forLoop                        shift and go to state 17

state 12

    (13) estatuto1 -> estatuto2 . SEMICOLON

    SEMICOLON       shift and go to state 28


state 13

    (15) estatuto2 -> asignacion .

    SEMICOLON       reduce using rule 15 (estatuto2 -> asignacion .)


state 14

    (16) estatuto2 -> condicion .

    SEMICOLON       reduce using rule 16 (estatuto2 -> condicion .)


state 15

    (17) estatuto2 -> llamado .

    SEMICOLON       reduce using rule 17 (estatuto2 -> llamado .)


state 16

    (18) estatuto2 -> whileLoop .

    SEMICOLON       reduce using rule 18 (estatuto2 -> whileLoop .)


state 17

    (19) estatuto2 -> forLoop .

    SEMICOLON       reduce using rule 19 (estatuto2 -> forLoop .)


state 18

    (20) asignacion -> ID . ASSIGN expresion
    (21) llamado -> ID . PARENTESIS_L llamado_1 PARENTESIS_R

    ASSIGN          shift and go to state 29
    PARENTESIS_L    shift and go to state 30


state 19

    (33) condicion -> IF . PARENTESIS_L expresion PARENTESIS_R bloque condicion2

    PARENTESIS_L    shift and go to state 31


state 20

    (31) whileLoop -> WHILE . PARENTESIS_L expresion PARENTESIS_R bloque

    PARENTESIS_L    shift and go to state 32


state 21

    (32) forLoop -> FOR . PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque

    PARENTESIS_L    shift and go to state 33


state 22

    (6) var2 -> var2 var2 .
    (6) var2 -> var2 . var2
    (5) var2 -> . VAR var3
    (6) var2 -> . var2 var2

  ! shift/reduce conflict for VAR resolved as shift
    ID              reduce using rule 6 (var2 -> var2 var2 .)
    IF              reduce using rule 6 (var2 -> var2 var2 .)
    WHILE           reduce using rule 6 (var2 -> var2 var2 .)
    FOR             reduce using rule 6 (var2 -> var2 var2 .)
    VAR             shift and go to state 10

  ! VAR             [ reduce using rule 6 (var2 -> var2 var2 .) ]

    var2                           shift and go to state 22

state 23

    (5) var2 -> VAR var3 .

    VAR             reduce using rule 5 (var2 -> VAR var3 .)
    ID              reduce using rule 5 (var2 -> VAR var3 .)
    IF              reduce using rule 5 (var2 -> VAR var3 .)
    WHILE           reduce using rule 5 (var2 -> VAR var3 .)
    FOR             reduce using rule 5 (var2 -> VAR var3 .)


state 24

    (7) var3 -> var4 . COLON tipo SEMICOLON
    (9) var4 -> var4 . COMA var4

    COLON           shift and go to state 34
    COMA            shift and go to state 35


state 25

    (8) var4 -> ID .

    COLON           reduce using rule 8 (var4 -> ID .)
    COMA            reduce using rule 8 (var4 -> ID .)


state 26

    (14) estatuto1 -> estatuto1 estatuto1 .
    (14) estatuto1 -> estatuto1 . estatuto1
    (13) estatuto1 -> . estatuto2 SEMICOLON
    (14) estatuto1 -> . estatuto1 estatuto1
    (15) estatuto2 -> . asignacion
    (16) estatuto2 -> . condicion
    (17) estatuto2 -> . llamado
    (18) estatuto2 -> . whileLoop
    (19) estatuto2 -> . forLoop
    (20) asignacion -> . ID ASSIGN expresion
    (33) condicion -> . IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2
    (21) llamado -> . ID PARENTESIS_L llamado_1 PARENTESIS_R
    (31) whileLoop -> . WHILE PARENTESIS_L expresion PARENTESIS_R bloque
    (32) forLoop -> . FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    CURLY_R         reduce using rule 14 (estatuto1 -> estatuto1 estatuto1 .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    FOR             shift and go to state 21

  ! ID              [ reduce using rule 14 (estatuto1 -> estatuto1 estatuto1 .) ]
  ! IF              [ reduce using rule 14 (estatuto1 -> estatuto1 estatuto1 .) ]
  ! WHILE           [ reduce using rule 14 (estatuto1 -> estatuto1 estatuto1 .) ]
  ! FOR             [ reduce using rule 14 (estatuto1 -> estatuto1 estatuto1 .) ]

    estatuto1                      shift and go to state 26
    estatuto2                      shift and go to state 12
    asignacion                     shift and go to state 13
    condicion                      shift and go to state 14
    llamado                        shift and go to state 15
    whileLoop                      shift and go to state 16
    forLoop                        shift and go to state 17

state 27

    (2) bloque -> CURLY_L var1 estatuto1 CURLY_R .

    $end            reduce using rule 2 (bloque -> CURLY_L var1 estatuto1 CURLY_R .)
    ELSE            reduce using rule 2 (bloque -> CURLY_L var1 estatuto1 CURLY_R .)
    SEMICOLON       reduce using rule 2 (bloque -> CURLY_L var1 estatuto1 CURLY_R .)


state 28

    (13) estatuto1 -> estatuto2 SEMICOLON .

    CURLY_R         reduce using rule 13 (estatuto1 -> estatuto2 SEMICOLON .)
    ID              reduce using rule 13 (estatuto1 -> estatuto2 SEMICOLON .)
    IF              reduce using rule 13 (estatuto1 -> estatuto2 SEMICOLON .)
    WHILE           reduce using rule 13 (estatuto1 -> estatuto2 SEMICOLON .)
    FOR             reduce using rule 13 (estatuto1 -> estatuto2 SEMICOLON .)


state 29

    (20) asignacion -> ID ASSIGN . expresion
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    expresion                      shift and go to state 37
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 30

    (21) llamado -> ID PARENTESIS_L . llamado_1 PARENTESIS_R
    (22) llamado_1 -> . llamado_2
    (23) llamado_1 -> . llamado_2 COMA llamado_2
    (24) llamado_2 -> . STRING
    (25) llamado_2 -> . expresion
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    STRING          shift and go to state 47
    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    llamado_1                      shift and go to state 45
    llamado_2                      shift and go to state 46
    expresion                      shift and go to state 48
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 31

    (33) condicion -> IF PARENTESIS_L . expresion PARENTESIS_R bloque condicion2
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    expresion                      shift and go to state 49
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 32

    (31) whileLoop -> WHILE PARENTESIS_L . expresion PARENTESIS_R bloque
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    expresion                      shift and go to state 50
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 33

    (32) forLoop -> FOR PARENTESIS_L . argumento expresion SEMICOLON expresion PARENTESIS_R bloque
    (36) argumento -> . argumento2
    (37) argumento -> . empty
    (38) argumento2 -> . ID COLON tipo
    (39) argumento2 -> . argumento2 COMA argumento2
    (53) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 54
    PARENTESIS_L    reduce using rule 53 (empty -> .)
    CTE_INT         reduce using rule 53 (empty -> .)
    CTE_FLOAT       reduce using rule 53 (empty -> .)

  ! ID              [ reduce using rule 53 (empty -> .) ]

    argumento                      shift and go to state 51
    argumento2                     shift and go to state 52
    empty                          shift and go to state 53

state 34

    (7) var3 -> var4 COLON . tipo SEMICOLON
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . STRING

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    tipo                           shift and go to state 55

state 35

    (9) var4 -> var4 COMA . var4
    (8) var4 -> . ID
    (9) var4 -> . var4 COMA var4

    ID              shift and go to state 25

    var4                           shift and go to state 59

state 36

    (50) var_cte -> ID .

    MULT            reduce using rule 50 (var_cte -> ID .)
    DIV             reduce using rule 50 (var_cte -> ID .)
    PLUS            reduce using rule 50 (var_cte -> ID .)
    MINUS           reduce using rule 50 (var_cte -> ID .)
    MORE            reduce using rule 50 (var_cte -> ID .)
    LESS            reduce using rule 50 (var_cte -> ID .)
    EQUAL           reduce using rule 50 (var_cte -> ID .)
    NOT_EQUAL       reduce using rule 50 (var_cte -> ID .)
    SEMICOLON       reduce using rule 50 (var_cte -> ID .)
    COMA            reduce using rule 50 (var_cte -> ID .)
    PARENTESIS_R    reduce using rule 50 (var_cte -> ID .)


state 37

    (20) asignacion -> ID ASSIGN expresion .

    SEMICOLON       reduce using rule 20 (asignacion -> ID ASSIGN expresion .)


state 38

    (26) expresion -> exp .
    (27) expresion -> exp . MORE exp
    (28) expresion -> exp . LESS exp
    (29) expresion -> exp . EQUAL exp
    (30) expresion -> exp . NOT_EQUAL exp

    SEMICOLON       reduce using rule 26 (expresion -> exp .)
    COMA            reduce using rule 26 (expresion -> exp .)
    PARENTESIS_R    reduce using rule 26 (expresion -> exp .)
    MORE            shift and go to state 60
    LESS            shift and go to state 61
    EQUAL           shift and go to state 62
    NOT_EQUAL       shift and go to state 63


state 39

    (40) exp -> termino .
    (41) exp -> termino . signo
    (42) signo -> . PLUS
    (43) signo -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MORE            reduce using rule 40 (exp -> termino .)
    LESS            reduce using rule 40 (exp -> termino .)
    EQUAL           reduce using rule 40 (exp -> termino .)
    NOT_EQUAL       reduce using rule 40 (exp -> termino .)
    SEMICOLON       reduce using rule 40 (exp -> termino .)
    COMA            reduce using rule 40 (exp -> termino .)
    PARENTESIS_R    reduce using rule 40 (exp -> termino .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66

  ! PLUS            [ reduce using rule 40 (exp -> termino .) ]
  ! MINUS           [ reduce using rule 40 (exp -> termino .) ]

    signo                          shift and go to state 64

state 40

    (44) termino -> factor .
    (45) termino -> factor . operacion
    (46) operacion -> . MULT exp
    (47) operacion -> . DIV exp

    PLUS            reduce using rule 44 (termino -> factor .)
    MINUS           reduce using rule 44 (termino -> factor .)
    MORE            reduce using rule 44 (termino -> factor .)
    LESS            reduce using rule 44 (termino -> factor .)
    EQUAL           reduce using rule 44 (termino -> factor .)
    NOT_EQUAL       reduce using rule 44 (termino -> factor .)
    SEMICOLON       reduce using rule 44 (termino -> factor .)
    COMA            reduce using rule 44 (termino -> factor .)
    PARENTESIS_R    reduce using rule 44 (termino -> factor .)
    MULT            shift and go to state 68
    DIV             shift and go to state 69

    operacion                      shift and go to state 67

state 41

    (48) factor -> PARENTESIS_L . expresion PARENTESIS_R
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    expresion                      shift and go to state 70
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 42

    (49) factor -> var_cte .

    MULT            reduce using rule 49 (factor -> var_cte .)
    DIV             reduce using rule 49 (factor -> var_cte .)
    PLUS            reduce using rule 49 (factor -> var_cte .)
    MINUS           reduce using rule 49 (factor -> var_cte .)
    MORE            reduce using rule 49 (factor -> var_cte .)
    LESS            reduce using rule 49 (factor -> var_cte .)
    EQUAL           reduce using rule 49 (factor -> var_cte .)
    NOT_EQUAL       reduce using rule 49 (factor -> var_cte .)
    SEMICOLON       reduce using rule 49 (factor -> var_cte .)
    COMA            reduce using rule 49 (factor -> var_cte .)
    PARENTESIS_R    reduce using rule 49 (factor -> var_cte .)


state 43

    (51) var_cte -> CTE_INT .

    MULT            reduce using rule 51 (var_cte -> CTE_INT .)
    DIV             reduce using rule 51 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 51 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 51 (var_cte -> CTE_INT .)
    MORE            reduce using rule 51 (var_cte -> CTE_INT .)
    LESS            reduce using rule 51 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 51 (var_cte -> CTE_INT .)
    NOT_EQUAL       reduce using rule 51 (var_cte -> CTE_INT .)
    SEMICOLON       reduce using rule 51 (var_cte -> CTE_INT .)
    COMA            reduce using rule 51 (var_cte -> CTE_INT .)
    PARENTESIS_R    reduce using rule 51 (var_cte -> CTE_INT .)


state 44

    (52) var_cte -> CTE_FLOAT .

    MULT            reduce using rule 52 (var_cte -> CTE_FLOAT .)
    DIV             reduce using rule 52 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 52 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 52 (var_cte -> CTE_FLOAT .)
    MORE            reduce using rule 52 (var_cte -> CTE_FLOAT .)
    LESS            reduce using rule 52 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 52 (var_cte -> CTE_FLOAT .)
    NOT_EQUAL       reduce using rule 52 (var_cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 52 (var_cte -> CTE_FLOAT .)
    COMA            reduce using rule 52 (var_cte -> CTE_FLOAT .)
    PARENTESIS_R    reduce using rule 52 (var_cte -> CTE_FLOAT .)


state 45

    (21) llamado -> ID PARENTESIS_L llamado_1 . PARENTESIS_R

    PARENTESIS_R    shift and go to state 71


state 46

    (22) llamado_1 -> llamado_2 .
    (23) llamado_1 -> llamado_2 . COMA llamado_2

    PARENTESIS_R    reduce using rule 22 (llamado_1 -> llamado_2 .)
    COMA            shift and go to state 72


state 47

    (24) llamado_2 -> STRING .

    COMA            reduce using rule 24 (llamado_2 -> STRING .)
    PARENTESIS_R    reduce using rule 24 (llamado_2 -> STRING .)


state 48

    (25) llamado_2 -> expresion .

    COMA            reduce using rule 25 (llamado_2 -> expresion .)
    PARENTESIS_R    reduce using rule 25 (llamado_2 -> expresion .)


state 49

    (33) condicion -> IF PARENTESIS_L expresion . PARENTESIS_R bloque condicion2

    PARENTESIS_R    shift and go to state 73


state 50

    (31) whileLoop -> WHILE PARENTESIS_L expresion . PARENTESIS_R bloque

    PARENTESIS_R    shift and go to state 74


state 51

    (32) forLoop -> FOR PARENTESIS_L argumento . expresion SEMICOLON expresion PARENTESIS_R bloque
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    expresion                      shift and go to state 75
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 52

    (36) argumento -> argumento2 .
    (39) argumento2 -> argumento2 . COMA argumento2

    PARENTESIS_L    reduce using rule 36 (argumento -> argumento2 .)
    ID              reduce using rule 36 (argumento -> argumento2 .)
    CTE_INT         reduce using rule 36 (argumento -> argumento2 .)
    CTE_FLOAT       reduce using rule 36 (argumento -> argumento2 .)
    COMA            shift and go to state 76


state 53

    (37) argumento -> empty .

    PARENTESIS_L    reduce using rule 37 (argumento -> empty .)
    ID              reduce using rule 37 (argumento -> empty .)
    CTE_INT         reduce using rule 37 (argumento -> empty .)
    CTE_FLOAT       reduce using rule 37 (argumento -> empty .)


state 54

    (38) argumento2 -> ID . COLON tipo

    COLON           shift and go to state 77


state 55

    (7) var3 -> var4 COLON tipo . SEMICOLON

    SEMICOLON       shift and go to state 78


state 56

    (10) tipo -> INT .

    SEMICOLON       reduce using rule 10 (tipo -> INT .)
    COMA            reduce using rule 10 (tipo -> INT .)
    PARENTESIS_L    reduce using rule 10 (tipo -> INT .)
    ID              reduce using rule 10 (tipo -> INT .)
    CTE_INT         reduce using rule 10 (tipo -> INT .)
    CTE_FLOAT       reduce using rule 10 (tipo -> INT .)


state 57

    (11) tipo -> FLOAT .

    SEMICOLON       reduce using rule 11 (tipo -> FLOAT .)
    COMA            reduce using rule 11 (tipo -> FLOAT .)
    PARENTESIS_L    reduce using rule 11 (tipo -> FLOAT .)
    ID              reduce using rule 11 (tipo -> FLOAT .)
    CTE_INT         reduce using rule 11 (tipo -> FLOAT .)
    CTE_FLOAT       reduce using rule 11 (tipo -> FLOAT .)


state 58

    (12) tipo -> STRING .

    SEMICOLON       reduce using rule 12 (tipo -> STRING .)
    COMA            reduce using rule 12 (tipo -> STRING .)
    PARENTESIS_L    reduce using rule 12 (tipo -> STRING .)
    ID              reduce using rule 12 (tipo -> STRING .)
    CTE_INT         reduce using rule 12 (tipo -> STRING .)
    CTE_FLOAT       reduce using rule 12 (tipo -> STRING .)


state 59

    (9) var4 -> var4 COMA var4 .
    (9) var4 -> var4 . COMA var4

  ! shift/reduce conflict for COMA resolved as shift
    COLON           reduce using rule 9 (var4 -> var4 COMA var4 .)
    COMA            shift and go to state 35

  ! COMA            [ reduce using rule 9 (var4 -> var4 COMA var4 .) ]


state 60

    (27) expresion -> exp MORE . exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    exp                            shift and go to state 79
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 61

    (28) expresion -> exp LESS . exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    exp                            shift and go to state 80
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 62

    (29) expresion -> exp EQUAL . exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    exp                            shift and go to state 81
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 63

    (30) expresion -> exp NOT_EQUAL . exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    exp                            shift and go to state 82
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 64

    (41) exp -> termino signo .

    MORE            reduce using rule 41 (exp -> termino signo .)
    LESS            reduce using rule 41 (exp -> termino signo .)
    EQUAL           reduce using rule 41 (exp -> termino signo .)
    NOT_EQUAL       reduce using rule 41 (exp -> termino signo .)
    SEMICOLON       reduce using rule 41 (exp -> termino signo .)
    COMA            reduce using rule 41 (exp -> termino signo .)
    PARENTESIS_R    reduce using rule 41 (exp -> termino signo .)
    PLUS            reduce using rule 41 (exp -> termino signo .)
    MINUS           reduce using rule 41 (exp -> termino signo .)


state 65

    (42) signo -> PLUS .

    MORE            reduce using rule 42 (signo -> PLUS .)
    LESS            reduce using rule 42 (signo -> PLUS .)
    EQUAL           reduce using rule 42 (signo -> PLUS .)
    NOT_EQUAL       reduce using rule 42 (signo -> PLUS .)
    SEMICOLON       reduce using rule 42 (signo -> PLUS .)
    COMA            reduce using rule 42 (signo -> PLUS .)
    PARENTESIS_R    reduce using rule 42 (signo -> PLUS .)
    PLUS            reduce using rule 42 (signo -> PLUS .)
    MINUS           reduce using rule 42 (signo -> PLUS .)


state 66

    (43) signo -> MINUS .

    MORE            reduce using rule 43 (signo -> MINUS .)
    LESS            reduce using rule 43 (signo -> MINUS .)
    EQUAL           reduce using rule 43 (signo -> MINUS .)
    NOT_EQUAL       reduce using rule 43 (signo -> MINUS .)
    SEMICOLON       reduce using rule 43 (signo -> MINUS .)
    COMA            reduce using rule 43 (signo -> MINUS .)
    PARENTESIS_R    reduce using rule 43 (signo -> MINUS .)
    PLUS            reduce using rule 43 (signo -> MINUS .)
    MINUS           reduce using rule 43 (signo -> MINUS .)


state 67

    (45) termino -> factor operacion .

    PLUS            reduce using rule 45 (termino -> factor operacion .)
    MINUS           reduce using rule 45 (termino -> factor operacion .)
    MORE            reduce using rule 45 (termino -> factor operacion .)
    LESS            reduce using rule 45 (termino -> factor operacion .)
    EQUAL           reduce using rule 45 (termino -> factor operacion .)
    NOT_EQUAL       reduce using rule 45 (termino -> factor operacion .)
    SEMICOLON       reduce using rule 45 (termino -> factor operacion .)
    COMA            reduce using rule 45 (termino -> factor operacion .)
    PARENTESIS_R    reduce using rule 45 (termino -> factor operacion .)


state 68

    (46) operacion -> MULT . exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    exp                            shift and go to state 83
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 69

    (47) operacion -> DIV . exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    exp                            shift and go to state 84
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 70

    (48) factor -> PARENTESIS_L expresion . PARENTESIS_R

    PARENTESIS_R    shift and go to state 85


state 71

    (21) llamado -> ID PARENTESIS_L llamado_1 PARENTESIS_R .

    SEMICOLON       reduce using rule 21 (llamado -> ID PARENTESIS_L llamado_1 PARENTESIS_R .)


state 72

    (23) llamado_1 -> llamado_2 COMA . llamado_2
    (24) llamado_2 -> . STRING
    (25) llamado_2 -> . expresion
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    STRING          shift and go to state 47
    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    llamado_2                      shift and go to state 86
    expresion                      shift and go to state 48
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 73

    (33) condicion -> IF PARENTESIS_L expresion PARENTESIS_R . bloque condicion2
    (2) bloque -> . CURLY_L var1 estatuto1 CURLY_R

    CURLY_L         shift and go to state 6

    bloque                         shift and go to state 87

state 74

    (31) whileLoop -> WHILE PARENTESIS_L expresion PARENTESIS_R . bloque
    (2) bloque -> . CURLY_L var1 estatuto1 CURLY_R

    CURLY_L         shift and go to state 6

    bloque                         shift and go to state 88

state 75

    (32) forLoop -> FOR PARENTESIS_L argumento expresion . SEMICOLON expresion PARENTESIS_R bloque

    SEMICOLON       shift and go to state 89


state 76

    (39) argumento2 -> argumento2 COMA . argumento2
    (38) argumento2 -> . ID COLON tipo
    (39) argumento2 -> . argumento2 COMA argumento2

    ID              shift and go to state 54

    argumento2                     shift and go to state 90

state 77

    (38) argumento2 -> ID COLON . tipo
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . STRING

    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    tipo                           shift and go to state 91

state 78

    (7) var3 -> var4 COLON tipo SEMICOLON .

    VAR             reduce using rule 7 (var3 -> var4 COLON tipo SEMICOLON .)
    ID              reduce using rule 7 (var3 -> var4 COLON tipo SEMICOLON .)
    IF              reduce using rule 7 (var3 -> var4 COLON tipo SEMICOLON .)
    WHILE           reduce using rule 7 (var3 -> var4 COLON tipo SEMICOLON .)
    FOR             reduce using rule 7 (var3 -> var4 COLON tipo SEMICOLON .)


state 79

    (27) expresion -> exp MORE exp .

    SEMICOLON       reduce using rule 27 (expresion -> exp MORE exp .)
    COMA            reduce using rule 27 (expresion -> exp MORE exp .)
    PARENTESIS_R    reduce using rule 27 (expresion -> exp MORE exp .)


state 80

    (28) expresion -> exp LESS exp .

    SEMICOLON       reduce using rule 28 (expresion -> exp LESS exp .)
    COMA            reduce using rule 28 (expresion -> exp LESS exp .)
    PARENTESIS_R    reduce using rule 28 (expresion -> exp LESS exp .)


state 81

    (29) expresion -> exp EQUAL exp .

    SEMICOLON       reduce using rule 29 (expresion -> exp EQUAL exp .)
    COMA            reduce using rule 29 (expresion -> exp EQUAL exp .)
    PARENTESIS_R    reduce using rule 29 (expresion -> exp EQUAL exp .)


state 82

    (30) expresion -> exp NOT_EQUAL exp .

    SEMICOLON       reduce using rule 30 (expresion -> exp NOT_EQUAL exp .)
    COMA            reduce using rule 30 (expresion -> exp NOT_EQUAL exp .)
    PARENTESIS_R    reduce using rule 30 (expresion -> exp NOT_EQUAL exp .)


state 83

    (46) operacion -> MULT exp .

    PLUS            reduce using rule 46 (operacion -> MULT exp .)
    MINUS           reduce using rule 46 (operacion -> MULT exp .)
    MORE            reduce using rule 46 (operacion -> MULT exp .)
    LESS            reduce using rule 46 (operacion -> MULT exp .)
    EQUAL           reduce using rule 46 (operacion -> MULT exp .)
    NOT_EQUAL       reduce using rule 46 (operacion -> MULT exp .)
    SEMICOLON       reduce using rule 46 (operacion -> MULT exp .)
    COMA            reduce using rule 46 (operacion -> MULT exp .)
    PARENTESIS_R    reduce using rule 46 (operacion -> MULT exp .)


state 84

    (47) operacion -> DIV exp .

    PLUS            reduce using rule 47 (operacion -> DIV exp .)
    MINUS           reduce using rule 47 (operacion -> DIV exp .)
    MORE            reduce using rule 47 (operacion -> DIV exp .)
    LESS            reduce using rule 47 (operacion -> DIV exp .)
    EQUAL           reduce using rule 47 (operacion -> DIV exp .)
    NOT_EQUAL       reduce using rule 47 (operacion -> DIV exp .)
    SEMICOLON       reduce using rule 47 (operacion -> DIV exp .)
    COMA            reduce using rule 47 (operacion -> DIV exp .)
    PARENTESIS_R    reduce using rule 47 (operacion -> DIV exp .)


state 85

    (48) factor -> PARENTESIS_L expresion PARENTESIS_R .

    MULT            reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    DIV             reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    PLUS            reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    MINUS           reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    MORE            reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    LESS            reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    EQUAL           reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    NOT_EQUAL       reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    SEMICOLON       reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    COMA            reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)
    PARENTESIS_R    reduce using rule 48 (factor -> PARENTESIS_L expresion PARENTESIS_R .)


state 86

    (23) llamado_1 -> llamado_2 COMA llamado_2 .

    PARENTESIS_R    reduce using rule 23 (llamado_1 -> llamado_2 COMA llamado_2 .)


state 87

    (33) condicion -> IF PARENTESIS_L expresion PARENTESIS_R bloque . condicion2
    (34) condicion2 -> . ELSE bloque
    (35) condicion2 -> . empty
    (53) empty -> .

    ELSE            shift and go to state 93
    SEMICOLON       reduce using rule 53 (empty -> .)

    condicion2                     shift and go to state 92
    empty                          shift and go to state 94

state 88

    (31) whileLoop -> WHILE PARENTESIS_L expresion PARENTESIS_R bloque .

    SEMICOLON       reduce using rule 31 (whileLoop -> WHILE PARENTESIS_L expresion PARENTESIS_R bloque .)


state 89

    (32) forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON . expresion PARENTESIS_R bloque
    (26) expresion -> . exp
    (27) expresion -> . exp MORE exp
    (28) expresion -> . exp LESS exp
    (29) expresion -> . exp EQUAL exp
    (30) expresion -> . exp NOT_EQUAL exp
    (40) exp -> . termino
    (41) exp -> . termino signo
    (44) termino -> . factor
    (45) termino -> . factor operacion
    (48) factor -> . PARENTESIS_L expresion PARENTESIS_R
    (49) factor -> . var_cte
    (50) var_cte -> . ID
    (51) var_cte -> . CTE_INT
    (52) var_cte -> . CTE_FLOAT

    PARENTESIS_L    shift and go to state 41
    ID              shift and go to state 36
    CTE_INT         shift and go to state 43
    CTE_FLOAT       shift and go to state 44

    expresion                      shift and go to state 95
    exp                            shift and go to state 38
    termino                        shift and go to state 39
    factor                         shift and go to state 40
    var_cte                        shift and go to state 42

state 90

    (39) argumento2 -> argumento2 COMA argumento2 .
    (39) argumento2 -> argumento2 . COMA argumento2

  ! shift/reduce conflict for COMA resolved as shift
    PARENTESIS_L    reduce using rule 39 (argumento2 -> argumento2 COMA argumento2 .)
    ID              reduce using rule 39 (argumento2 -> argumento2 COMA argumento2 .)
    CTE_INT         reduce using rule 39 (argumento2 -> argumento2 COMA argumento2 .)
    CTE_FLOAT       reduce using rule 39 (argumento2 -> argumento2 COMA argumento2 .)
    COMA            shift and go to state 76

  ! COMA            [ reduce using rule 39 (argumento2 -> argumento2 COMA argumento2 .) ]


state 91

    (38) argumento2 -> ID COLON tipo .

    COMA            reduce using rule 38 (argumento2 -> ID COLON tipo .)
    PARENTESIS_L    reduce using rule 38 (argumento2 -> ID COLON tipo .)
    ID              reduce using rule 38 (argumento2 -> ID COLON tipo .)
    CTE_INT         reduce using rule 38 (argumento2 -> ID COLON tipo .)
    CTE_FLOAT       reduce using rule 38 (argumento2 -> ID COLON tipo .)


state 92

    (33) condicion -> IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2 .

    SEMICOLON       reduce using rule 33 (condicion -> IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2 .)


state 93

    (34) condicion2 -> ELSE . bloque
    (2) bloque -> . CURLY_L var1 estatuto1 CURLY_R

    CURLY_L         shift and go to state 6

    bloque                         shift and go to state 96

state 94

    (35) condicion2 -> empty .

    SEMICOLON       reduce using rule 35 (condicion2 -> empty .)


state 95

    (32) forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON expresion . PARENTESIS_R bloque

    PARENTESIS_R    shift and go to state 97


state 96

    (34) condicion2 -> ELSE bloque .

    SEMICOLON       reduce using rule 34 (condicion2 -> ELSE bloque .)


state 97

    (32) forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R . bloque
    (2) bloque -> . CURLY_L var1 estatuto1 CURLY_R

    CURLY_L         shift and go to state 6

    bloque                         shift and go to state 98

state 98

    (32) forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque .

    SEMICOLON       reduce using rule 32 (forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for IF in state 26 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 26 resolved as shift
WARNING: shift/reduce conflict for FOR in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for COMA in state 59 resolved as shift
WARNING: shift/reduce conflict for COMA in state 90 resolved as shift
