
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BRACKET_L BRACKET_R COLON COMA CTE_FLOAT CTE_INT CTE_STRING CURLY_L CURLY_R DIV ELSE EQUAL FLOAT FOR FUNC ID IF INT LESS MAIN MINUS MORE MULT NOTEQUAL NOT_EQUAL PARENTESIS_L PARENTESIS_R PLUS PRINT PROGRAM SEMICOLON STRING VAR WHILEprograma : PROGRAM PARENTESIS_L PARENTESIS_R bloquebloque : CURLY_L var1 estatuto1 CURLY_Rvar1 : var2\n            | emptyvar2 : VAR var3\n            | var2 var2var3 : var4 COLON tipo SEMICOLONvar4 : ID\n              | var4 COMA var4tipo : INT\n            | FLOAT\n            | STRINGestatuto1 : estatuto2 SEMICOLON\n                | estatuto1 estatuto1estatuto2 : asignacion \n                | condicion\n                | llamado\n                | whileLoop\n                | forLoopasignacion : ID ASSIGN expresionllamado : ID PARENTESIS_L llamado_1 PARENTESIS_Rllamado_1 : llamado_2\n                    | llamado_2 COMA llamado_2llamado_2 : STRING\n                    | expresionexpresion : exp\n    | exp MORE exp\n    | exp LESS exp\n    | exp EQUAL exp\n    | exp NOT_EQUAL expwhileLoop : WHILE PARENTESIS_L expresion PARENTESIS_R bloqueforLoop : FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloquecondicion : IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2condicion2 : ELSE bloque\n                     | emptyargumento : argumento2\n                  | emptyargumento2 : ID COLON tipo\n            | argumento2 COMA argumento2exp : termino\n           | termino signosigno : PLUS\n             | MINUStermino : factor\n               | factor operacionoperacion : MULT exp\n                 | DIV expfactor : PARENTESIS_L expresion PARENTESIS_R\n               | var_ctevar_cte : ID \n              | CTE_INT\n              | CTE_FLOATempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,27,],[0,-1,-2,]),'PARENTESIS_L':([2,18,19,20,21,29,30,31,32,33,41,51,52,53,56,57,58,60,61,62,63,68,69,72,89,90,91,],[3,30,31,32,33,41,41,41,41,-53,41,41,-36,-37,-10,-11,-12,41,41,41,41,41,41,41,41,-39,-38,]),'PARENTESIS_R':([3,36,38,39,40,42,43,44,45,46,47,48,49,50,64,65,66,67,70,79,80,81,82,83,84,85,86,95,],[4,-50,-26,-40,-44,-49,-51,-52,71,-22,-24,-25,73,74,-41,-42,-43,-45,85,-27,-28,-29,-30,-46,-47,-48,-23,97,]),'CURLY_L':([4,73,74,93,97,],[6,6,6,6,6,]),'VAR':([6,8,22,23,78,],[10,10,10,-5,-7,]),'ID':([6,7,8,9,10,11,22,23,26,28,29,30,31,32,33,35,41,51,52,53,56,57,58,60,61,62,63,68,69,72,76,78,89,90,91,],[-53,18,-3,-4,25,18,-6,-5,18,-13,36,36,36,36,54,25,36,36,-36,-37,-10,-11,-12,36,36,36,36,36,36,36,54,-7,36,-39,-38,]),'IF':([6,7,8,9,11,22,23,26,28,78,],[-53,19,-3,-4,19,-6,-5,19,-13,-7,]),'WHILE':([6,7,8,9,11,22,23,26,28,78,],[-53,20,-3,-4,20,-6,-5,20,-13,-7,]),'FOR':([6,7,8,9,11,22,23,26,28,78,],[-53,21,-3,-4,21,-6,-5,21,-13,-7,]),'CURLY_R':([11,26,28,],[27,-14,-13,]),'SEMICOLON':([12,13,14,15,16,17,27,36,37,38,39,40,42,43,44,55,56,57,58,64,65,66,67,71,75,79,80,81,82,83,84,85,87,88,92,94,96,98,],[28,-15,-16,-17,-18,-19,-2,-50,-20,-26,-40,-44,-49,-51,-52,78,-10,-11,-12,-41,-42,-43,-45,-21,89,-27,-28,-29,-30,-46,-47,-48,-53,-31,-33,-35,-34,-32,]),'ASSIGN':([18,],[29,]),'COLON':([24,25,54,59,],[34,-8,77,-9,]),'COMA':([24,25,36,38,39,40,42,43,44,46,47,48,52,56,57,58,59,64,65,66,67,79,80,81,82,83,84,85,90,91,],[35,-8,-50,-26,-40,-44,-49,-51,-52,72,-24,-25,76,-10,-11,-12,35,-41,-42,-43,-45,-27,-28,-29,-30,-46,-47,-48,76,-38,]),'ELSE':([27,87,],[-2,93,]),'CTE_INT':([29,30,31,32,33,41,51,52,53,56,57,58,60,61,62,63,68,69,72,89,90,91,],[43,43,43,43,-53,43,43,-36,-37,-10,-11,-12,43,43,43,43,43,43,43,43,-39,-38,]),'CTE_FLOAT':([29,30,31,32,33,41,51,52,53,56,57,58,60,61,62,63,68,69,72,89,90,91,],[44,44,44,44,-53,44,44,-36,-37,-10,-11,-12,44,44,44,44,44,44,44,44,-39,-38,]),'STRING':([30,34,72,77,],[47,58,47,58,]),'INT':([34,77,],[56,56,]),'FLOAT':([34,77,],[57,57,]),'MULT':([36,40,42,43,44,85,],[-50,68,-49,-51,-52,-48,]),'DIV':([36,40,42,43,44,85,],[-50,69,-49,-51,-52,-48,]),'PLUS':([36,39,40,42,43,44,64,65,66,67,83,84,85,],[-50,65,-44,-49,-51,-52,-41,-42,-43,-45,-46,-47,-48,]),'MINUS':([36,39,40,42,43,44,64,65,66,67,83,84,85,],[-50,66,-44,-49,-51,-52,-41,-42,-43,-45,-46,-47,-48,]),'MORE':([36,38,39,40,42,43,44,64,65,66,67,83,84,85,],[-50,60,-40,-44,-49,-51,-52,-41,-42,-43,-45,-46,-47,-48,]),'LESS':([36,38,39,40,42,43,44,64,65,66,67,83,84,85,],[-50,61,-40,-44,-49,-51,-52,-41,-42,-43,-45,-46,-47,-48,]),'EQUAL':([36,38,39,40,42,43,44,64,65,66,67,83,84,85,],[-50,62,-40,-44,-49,-51,-52,-41,-42,-43,-45,-46,-47,-48,]),'NOT_EQUAL':([36,38,39,40,42,43,44,64,65,66,67,83,84,85,],[-50,63,-40,-44,-49,-51,-52,-41,-42,-43,-45,-46,-47,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'bloque':([4,73,74,93,97,],[5,87,88,96,98,]),'var1':([6,],[7,]),'var2':([6,8,22,],[8,22,22,]),'empty':([6,33,87,],[9,53,94,]),'estatuto1':([7,11,26,],[11,26,26,]),'estatuto2':([7,11,26,],[12,12,12,]),'asignacion':([7,11,26,],[13,13,13,]),'condicion':([7,11,26,],[14,14,14,]),'llamado':([7,11,26,],[15,15,15,]),'whileLoop':([7,11,26,],[16,16,16,]),'forLoop':([7,11,26,],[17,17,17,]),'var3':([10,],[23,]),'var4':([10,35,],[24,59,]),'expresion':([29,30,31,32,41,51,72,89,],[37,48,49,50,70,75,48,95,]),'exp':([29,30,31,32,41,51,60,61,62,63,68,69,72,89,],[38,38,38,38,38,38,79,80,81,82,83,84,38,38,]),'termino':([29,30,31,32,41,51,60,61,62,63,68,69,72,89,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor':([29,30,31,32,41,51,60,61,62,63,68,69,72,89,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'var_cte':([29,30,31,32,41,51,60,61,62,63,68,69,72,89,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'llamado_1':([30,],[45,]),'llamado_2':([30,72,],[46,86,]),'argumento':([33,],[51,]),'argumento2':([33,76,],[52,90,]),'tipo':([34,77,],[55,91,]),'signo':([39,],[64,]),'operacion':([40,],[67,]),'condicion2':([87,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM PARENTESIS_L PARENTESIS_R bloque','programa',4,'p_programa','Yacc.py',148),
  ('bloque -> CURLY_L var1 estatuto1 CURLY_R','bloque',4,'p_bloque','Yacc.py',152),
  ('var1 -> var2','var1',1,'p_var1','Yacc.py',156),
  ('var1 -> empty','var1',1,'p_var1','Yacc.py',157),
  ('var2 -> VAR var3','var2',2,'p_var2','Yacc.py',161),
  ('var2 -> var2 var2','var2',2,'p_var2','Yacc.py',162),
  ('var3 -> var4 COLON tipo SEMICOLON','var3',4,'p_var3','Yacc.py',166),
  ('var4 -> ID','var4',1,'p_var4','Yacc.py',170),
  ('var4 -> var4 COMA var4','var4',3,'p_var4','Yacc.py',171),
  ('tipo -> INT','tipo',1,'p_tipo','Yacc.py',175),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Yacc.py',176),
  ('tipo -> STRING','tipo',1,'p_tipo','Yacc.py',177),
  ('estatuto1 -> estatuto2 SEMICOLON','estatuto1',2,'p_estatuto1','Yacc.py',181),
  ('estatuto1 -> estatuto1 estatuto1','estatuto1',2,'p_estatuto1','Yacc.py',182),
  ('estatuto2 -> asignacion','estatuto2',1,'p_estatuto2','Yacc.py',186),
  ('estatuto2 -> condicion','estatuto2',1,'p_estatuto2','Yacc.py',187),
  ('estatuto2 -> llamado','estatuto2',1,'p_estatuto2','Yacc.py',188),
  ('estatuto2 -> whileLoop','estatuto2',1,'p_estatuto2','Yacc.py',189),
  ('estatuto2 -> forLoop','estatuto2',1,'p_estatuto2','Yacc.py',190),
  ('asignacion -> ID ASSIGN expresion','asignacion',3,'p_asignacion','Yacc.py',194),
  ('llamado -> ID PARENTESIS_L llamado_1 PARENTESIS_R','llamado',4,'p_llamado','Yacc.py',198),
  ('llamado_1 -> llamado_2','llamado_1',1,'p_llamado_1','Yacc.py',202),
  ('llamado_1 -> llamado_2 COMA llamado_2','llamado_1',3,'p_llamado_1','Yacc.py',203),
  ('llamado_2 -> STRING','llamado_2',1,'p_llamado_2','Yacc.py',207),
  ('llamado_2 -> expresion','llamado_2',1,'p_llamado_2','Yacc.py',208),
  ('expresion -> exp','expresion',1,'p_expresion','Yacc.py',212),
  ('expresion -> exp MORE exp','expresion',3,'p_expresion','Yacc.py',213),
  ('expresion -> exp LESS exp','expresion',3,'p_expresion','Yacc.py',214),
  ('expresion -> exp EQUAL exp','expresion',3,'p_expresion','Yacc.py',215),
  ('expresion -> exp NOT_EQUAL exp','expresion',3,'p_expresion','Yacc.py',216),
  ('whileLoop -> WHILE PARENTESIS_L expresion PARENTESIS_R bloque','whileLoop',5,'p_whileLoop','Yacc.py',220),
  ('forLoop -> FOR PARENTESIS_L argumento expresion SEMICOLON expresion PARENTESIS_R bloque','forLoop',8,'p_forLoop','Yacc.py',224),
  ('condicion -> IF PARENTESIS_L expresion PARENTESIS_R bloque condicion2','condicion',6,'p_condicion','Yacc.py',228),
  ('condicion2 -> ELSE bloque','condicion2',2,'p_condicion2','Yacc.py',232),
  ('condicion2 -> empty','condicion2',1,'p_condicion2','Yacc.py',233),
  ('argumento -> argumento2','argumento',1,'p_argumento','Yacc.py',237),
  ('argumento -> empty','argumento',1,'p_argumento','Yacc.py',238),
  ('argumento2 -> ID COLON tipo','argumento2',3,'p_argumento2','Yacc.py',242),
  ('argumento2 -> argumento2 COMA argumento2','argumento2',3,'p_argumento2','Yacc.py',243),
  ('exp -> termino','exp',1,'p_exp','Yacc.py',247),
  ('exp -> termino signo','exp',2,'p_exp','Yacc.py',248),
  ('signo -> PLUS','signo',1,'p_signo','Yacc.py',252),
  ('signo -> MINUS','signo',1,'p_signo','Yacc.py',253),
  ('termino -> factor','termino',1,'p_termino','Yacc.py',257),
  ('termino -> factor operacion','termino',2,'p_termino','Yacc.py',258),
  ('operacion -> MULT exp','operacion',2,'p_operacion','Yacc.py',262),
  ('operacion -> DIV exp','operacion',2,'p_operacion','Yacc.py',263),
  ('factor -> PARENTESIS_L expresion PARENTESIS_R','factor',3,'p_factor','Yacc.py',267),
  ('factor -> var_cte','factor',1,'p_factor','Yacc.py',268),
  ('var_cte -> ID','var_cte',1,'p_var_cte','Yacc.py',272),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','Yacc.py',273),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','Yacc.py',274),
  ('empty -> <empty>','empty',0,'p_empty','Yacc.py',278),
]
